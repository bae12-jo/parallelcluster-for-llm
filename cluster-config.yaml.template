# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

Imds:
  ImdsSupport: ${IMDS_SUPPORT}
Image:
  Os: ${OS_TYPE}
HeadNode:
  InstanceType: ${HEAD_NODE_INSTANCE_TYPE}
  Networking:
    SubnetId: ${PRIVATE_SUBNET_ID}
    AdditionalSecurityGroups:
      - ${HEAD_NODE_SECURITY_GROUP} 
  LocalStorage:
    RootVolume:
      Size: ${HEAD_NODE_ROOT_VOLUME_SIZE}
      DeleteOnTermination: true
  Iam:
    AdditionalIamPolicies:
      - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      - Policy: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      - Policy: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  CustomActions:
    OnNodeConfigured:
      Sequence:
        - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/docker/postinstall.sh'
        - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/pyxis/postinstall.sh'
          Args:
            - /fsx
        - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/nccl/postinstall.sh'
          Args:
            - ${NCCL_VERSION}
            - ${AWS_OFI_NCCL_VERSION}
LoginNodes:
  Pools:
    - Name: ${LOGIN_NODE_POOL_NAME}
      Count: ${LOGIN_NODE_COUNT}
      InstanceType: ${LOGIN_NODE_INSTANCE_TYPE}
      Networking:
        SubnetIds:
          - ${LOGIN_NODE_SUBNET_ID}
        AdditionalSecurityGroups:
          - ${LOGIN_NODE_SECURITY_GROUP}
      Iam:
        AdditionalIamPolicies:
          - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
          - Policy: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
          - Policy: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
          - Policy: arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
          - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess   
      Ssh:
        KeyName: ${LOGIN_NODE_KEY_PAIR}
      CustomActions:
        OnNodeConfigured:
          Sequence:
            - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/docker/postinstall.sh'
            - Script: '${GRAFANA_SCRIPT_URL}'
              Args:
                - sc23

Scheduling:
  Scheduler: ${SCHEDULER}
  SlurmSettings:
    ScaledownIdletime: ${SCALEDOWN_IDLETIME}
    QueueUpdateStrategy: ${QUEUE_UPDATE_STRATEGY}
    CustomSlurmSettings:
      - JobCompType: jobcomp/filetxt
      - JobCompLoc: /home/slurm/slurm-job-completions.txt
      - KillWait: ${KILL_WAIT}
      - SlurmdTimeout: ${SLURMD_TIMEOUT}
      - UnkillableStepTimeout: ${UNKILLABLE_STEP_TIMEOUT}
  SlurmQueues:
    - Name: ${QUEUE_NAME}
      CapacityType: ${CAPACITY_TYPE}
      Networking:
        SubnetIds:
          - ${PRIVATE_SUBNET_ID}
        PlacementGroup:
          Enabled: ${PLACEMENT_GROUP_ENABLED}
        AdditionalSecurityGroups:
          - ${COMPUTE_NODE_SECURITY_GROUP}
      ComputeSettings:
        LocalStorage:
          EphemeralVolume:
            MountDir: /scratch
          RootVolume:
            Size: ${COMPUTE_NODE_ROOT_VOLUME_SIZE}
      JobExclusiveAllocation: ${JOB_EXCLUSIVE_ALLOCATION}
      ComputeResources:
        - Name: ${COMPUTE_RESOURCE_NAME}
          InstanceType: ${COMPUTE_INSTANCE_TYPE}
          MinCount: ${MIN_COUNT}
          MaxCount: ${MAX_COUNT}
          Efa:
            Enabled: ${EFA_ENABLED}
      CustomActions:
        OnNodeConfigured:
          Sequence:
            - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/docker/postinstall.sh'
            - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/pyxis/postinstall.sh'
              Args:
                - /fsx
            - Script: 'https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-post-install-scripts/main/nccl/postinstall.sh'
              Args:
                - ${NCCL_VERSION}
                - ${AWS_OFI_NCCL_VERSION}
SharedStorage:
  - Name: HomeDirs
    MountDir: /home
    StorageType: FsxOpenZfs
    FsxOpenZfsSettings:
      VolumeId: ${FSxORootVolumeId}
  - MountDir: /fsx
    Name: fsx
    StorageType: FsxLustre
    FsxLustreSettings:
      FileSystemId: ${FSxLustreFilesystemId}
Monitoring:
  DetailedMonitoring: ${DETAILED_MONITORING}
  Logs:
    CloudWatch:
      Enabled: ${CLOUDWATCH_LOGS_ENABLED}
  Dashboards:
    CloudWatch:
      Enabled: ${CLOUDWATCH_DASHBOARDS_ENABLED}
Tags:
  - Key: 'Grafana'
    Value: '${GRAFANA_TAG_VALUE}'